{"ast":null,"code":"var _jsxFileName = \"/Users/ph/Documents/LojaPokemon/frontend/src/components/CardsContainer/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport './styles.css';\nimport Card from '../Card';\nimport { apiType } from '../../services/api';\nexport default function CardsContainer({\n  addToCart,\n  searchTerm\n}) {\n  const [pokemonArray, setPokemonArray] = useState([]);\n  const [currentSearchTerm, setSearchTerm] = useState(() => {\n    return searchTerm;\n  });\n  const [newArraypokemon, setNewArrayPokemon] = useState([]);\n  useEffect(() => {\n    async function loadPokemon() {\n      const response = await apiType.get('/electric');\n      if (searchTerm != '') setNewArrayPokemon(pokemonArray.filter(pokemon => pokemon.pokemon.name.includes(searchTerm)));else setPokemonArray(response.data.pokemon);\n    }\n\n    loadPokemon();\n  }, []);\n  console.log(pokemonArray.filter(pokemon => pokemon.pokemon.name.includes(searchTerm)));\n  if (pokemonArray != newArraypokemon) setPokemonArray(newArraypokemon);\n\n  function addItem(currentPokemon) {\n    addToCart(currentPokemon);\n  }\n\n  function render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 27\n      }\n    }, pokemonArray.filter(pokemon => pokemon.pokemon.name.includes(searchTerm)).map(pokemon => {\n      return /*#__PURE__*/React.createElement(Card, {\n        pokemon: pokemon,\n        addToCart: addItem,\n        key: pokemon.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 10\n        }\n      });\n    }));\n  }\n\n  return render();\n}\n;","map":{"version":3,"sources":["/Users/ph/Documents/LojaPokemon/frontend/src/components/CardsContainer/index.js"],"names":["React","useEffect","useState","Card","apiType","CardsContainer","addToCart","searchTerm","pokemonArray","setPokemonArray","currentSearchTerm","setSearchTerm","newArraypokemon","setNewArrayPokemon","loadPokemon","response","get","filter","pokemon","name","includes","data","console","log","addItem","currentPokemon","render","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,cAAP;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AAEA,eAAe,SAASC,cAAT,CAAwB;AAACC,EAAAA,SAAD;AAAaC,EAAAA;AAAb,CAAxB,EAAkD;AAC/D,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACQ,iBAAD,EAAoBC,aAApB,IAAqCT,QAAQ,CAAC,MAAI;AAAC,WAAOK,UAAP;AAAkB,GAAxB,CAAnD;AACA,QAAM,CAACK,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,EAAD,CAAtD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAea,WAAf,GAA6B;AACzB,YAAMC,QAAQ,GAAG,MAAMX,OAAO,CAACY,GAAR,CAAY,WAAZ,CAAvB;AACA,UAAGT,UAAU,IAAI,EAAjB,EACAM,kBAAkB,CAACL,YAAY,CAACS,MAAb,CAAoBC,OAAO,IAAIA,OAAO,CAACA,OAAR,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8Bb,UAA9B,CAA/B,CAAD,CAAlB,CADA,KAGAE,eAAe,CAACM,QAAQ,CAACM,IAAT,CAAcH,OAAf,CAAf;AACH;;AACDJ,IAAAA,WAAW;AAEZ,GAVQ,EAUN,EAVM,CAAT;AAYAQ,EAAAA,OAAO,CAACC,GAAR,CAAYf,YAAY,CAACS,MAAb,CAAoBC,OAAO,IAAIA,OAAO,CAACA,OAAR,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8Bb,UAA9B,CAA/B,CAAZ;AACA,MAAGC,YAAY,IAAII,eAAnB,EACAH,eAAe,CAACG,eAAD,CAAf;;AAEA,WAASY,OAAT,CAAiBC,cAAjB,EAAgC;AAC9BnB,IAAAA,SAAS,CAACmB,cAAD,CAAT;AACD;;AACH,WAASC,MAAT,GAAiB;AAAC,wBAAQ;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACzBlB,YAAY,CAACS,MAAb,CAAoBC,OAAO,IAAIA,OAAO,CAACA,OAAR,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8Bb,UAA9B,CAA/B,EAA0EoB,GAA1E,CAA8ET,OAAO,IAAI;AACxF,0BAAO,oBAAC,IAAD;AAAM,QAAA,OAAO,EAAEA,OAAf;AAAwB,QAAA,SAAS,EAAEM,OAAnC;AAA4C,QAAA,GAAG,EAAEN,OAAO,CAACC,IAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFA,CADyB,CAAR;AAIT;;AAET,SAAOO,MAAM,EAAb;AACC;AAAA","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './styles.css';\nimport Card from '../Card';\nimport {apiType} from '../../services/api';\n\nexport default function CardsContainer({addToCart , searchTerm}) {\n  const [pokemonArray, setPokemonArray] = useState([]);\n  const [currentSearchTerm, setSearchTerm] = useState(()=>{return searchTerm});\n  const [newArraypokemon, setNewArrayPokemon] = useState([]);\n  \n  useEffect(() => {\n    async function loadPokemon() {\n        const response = await apiType.get('/electric');\n        if(searchTerm != '')\n        setNewArrayPokemon(pokemonArray.filter(pokemon => pokemon.pokemon.name.includes(searchTerm)));\n        else\n        setPokemonArray(response.data.pokemon);\n    }\n    loadPokemon();\n    \n  }, [])\n\n  console.log(pokemonArray.filter(pokemon => pokemon.pokemon.name.includes(searchTerm)))\n  if(pokemonArray != newArraypokemon)\n  setPokemonArray(newArraypokemon);\n\n  function addItem(currentPokemon){\n    addToCart(currentPokemon)\n  }\nfunction render(){return (<div className='container'>\n{pokemonArray.filter(pokemon => pokemon.pokemon.name.includes(searchTerm)).map(pokemon => {\n  return <Card pokemon={pokemon} addToCart={addItem} key={pokemon.name}/>\n})}\n</div>);}\n  \nreturn render();\n};\n"]},"metadata":{},"sourceType":"module"}